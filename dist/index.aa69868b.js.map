{"mappings":"AAAA,6BAA6B;AAC7B,yDAAyD;AAEzD,gFAAgF;AAChF,iCAAiC;AACjC,KAAK;AAEL,8DAA8D;AAC9D,iCAAiC;AACjC,KAAK;AAEL,wCAAwC;AAExC,MAAM,UAAU;IACd,QAAQ;IACR,WAAW;IACX,WAAW;IACX,QAAQ;IACR,OAAO;IACP,aAAa;IACb,OAAO;IACP,QAAQ;IACR,SAAS;IACT,SAAS;IACT,QAAQ;IACR,OAAO;IACP,SAAS;IACT,SAAS;IACT,iBAAiB;IACjB,UAAU;IACV,UAAU;IACV,KAAK;IACL,SAAS;AACX;AAEA,oCAAoC;AAEpC,SAAS,gBAAgB,CAAC,SAAS,CAAC;IAClC,MAAM,mBAAmB,EAAE,MAAM,CAAC,OAAO,CAAC;IAC1C,MAAM,QAAQ,SAAS,aAAa,CAAC;IAErC,IAAI,CAAC,oBAAoB,EAAE,MAAM,CAAC,OAAO,CAAC,sBAAsB,MAC9D;IAGF,IAAI;IACJ,IAAI,kBAAkB;QACpB,kBAAkB,EAAE,MAAM,CAAC,OAAO,CAAC;QACnC,gBAAgB,SAAS,CAAC,MAAM,CAAC;QACjC,MAAM,SAAS,CAAC,MAAM,CAAC;IACzB;IAEA,SAAS,gBAAgB,CAAC,0BAA0B,OAAO,CAAC,CAAC;QAC3D,IAAI,aAAa,iBACf;QAEF,SAAS,SAAS,CAAC,MAAM,CAAC;QAC1B,MAAM,SAAS,CAAC,MAAM,CAAC;IACzB;AACF;AAEA,uCAAuC;AAEvC,MAAM,wBAAwB,SAAU,IAAI;IAC1C,MAAM,cAAc,KAAK,MAAM,CAAC,GAAG,WAAW;IAC9C,MAAM,YAAY,KAAK,KAAK,CAAC;IAC7B,OAAO,CAAC,EAAE,YAAY,EAAE,UAAU,CAAC;AACrC;AAEA,wEAAwE;AAExE,MAAM,cAAc;IAClB,MAAM,gBAAgB,SAAS,aAAa,CAAC;IAC7C,MAAM,eAAe,SAAS,aAAa,CAAC;IAC5C,MAAM,gBAAgB,SAAS,aAAa,CAAC;IAC7C,MAAM,mBAAmB,SAAS,aAAa,CAAC;IAEhD,MAAM,SAAS,KAAK,KAAK,CAAC,KAAK,MAAM,KAAK;IAC1C,MAAM,UAAU;IAEhB,IAAI;QACF,MAAM,WAAW,MAAM,MAAM,CAAC,+BAA+B,CAAC;QAC9D,MAAM,SAAS,MAAM,SAAS,IAAI;QAClC,MAAM,OAAO,OAAO,OAAO,CAAC,OAAO;QAEnC,MAAM,QAAQ,KAAK,SAAS,CACzB,GAAG,CAAC,CAAC;YACJ,KAAK,MAAM,CAAC,KAAK,MAAM,IAAI,OAAO,OAAO,CAAC,SACxC,IAAI,OAAO,OAAO;gBAChB,IAAI,IAAI,QAAQ,CAAC,MAAM;oBACrB,MAAM,QAAQ,IAAI,KAAK,CAAC;oBACxB,OAAO,MAAM,GAAG,CAAC,CAAC,OAAS,sBAAsB,OAAO,IAAI,CAAC;gBAC/D,OACE,OAAO,sBAAsB;YAEjC;QAEJ,GACC,IAAI,CAAC;QAER,SAAS,IAAI,CAAC,KAAK,CAAC,eAAe,GAAG,CAAC,iFAAiF,EAAE,QAAQ,EAAE,KAAK,aAAa,CAAC,CAAC,CAAC;QAEzJ,cAAc,WAAW,GAAG,KAAK,KAAK;QACtC,aAAa,WAAW,GAAG,KAAK,YAAY,CAAC,KAAK,CAAC,GAAG;QACtD,cAAc,WAAW,GAAG;QAC5B,iBAAiB,WAAW,GAAG,KAAK,QAAQ;IAC9C,EAAE,OAAO,OAAO;QACd,QAAQ,GAAG,CAAC;IACd;AACF;AAEA","sources":["src/js/main.js"],"sourcesContent":["// const mySearch = \"avatar\";\n// const imgPath = \"https://image.tmdb.org/t/p/original\";\n\n// fetch(`/.netlify/functions/fetch-movie?query=${mySearch}`).then((response) =>\n//   console.log(response.json())\n// );\n\n// fetch(`/.netlify/functions/fetch-movie`).then((response) =>\n//   console.log(response.json())\n// );\n\n// --------- GENRE ID FROM API ---------\n\nconst genreID = {\n  action: 28,\n  adventure: 12,\n  animation: 16,\n  comedy: 35,\n  crime: 80,\n  documentary: 99,\n  drama: 18,\n  family: 10751,\n  fantasy: 14,\n  history: 36,\n  horror: 27,\n  music: 10402,\n  mystery: 9648,\n  romance: 10749,\n  science_fiction: 878,\n  tv_movie: 10770,\n  thriller: 53,\n  war: 10752,\n  western: 37,\n};\n\n// --------- DROPDOWN MENU ---------\n\ndocument.addEventListener(\"click\", (e) => {\n  const isDropdownButton = e.target.matches(\"[data-dropdown-button]\");\n  const caret = document.querySelector(\".fa-caret-down\");\n\n  if (!isDropdownButton && e.target.closest(\"[data-dropdown]\") != null) {\n    return;\n  }\n\n  let currentDropdown;\n  if (isDropdownButton) {\n    currentDropdown = e.target.closest(\"[data-dropdown]\");\n    currentDropdown.classList.toggle(\"active\");\n    caret.classList.toggle(\"fa-caret-down__rotate\");\n  }\n\n  document.querySelectorAll(\"[data-dropdown].active\").forEach((dropdown) => {\n    if (dropdown === currentDropdown) {\n      return;\n    }\n    dropdown.classList.remove(\"active\");\n    caret.classList.remove(\"fa-caret-down__rotate\");\n  });\n});\n\n// --------- HELPER FUNCTIONS ---------\n\nconst firstLetterCapitalize = function (word) {\n  const firstLetter = word.charAt(0).toUpperCase();\n  const remaining = word.slice(1);\n  return `${firstLetter}${remaining}`;\n};\n\n// --------- LOAD INITIAL FEATURED TRENDING FROM API BY RANDOM ---------\n\nconst loadInitial = async function () {\n  const featuredTitle = document.querySelector(\".featured__title\");\n  const featuredDate = document.querySelector(\".featured__date\");\n  const featuredGenre = document.querySelector(\".featured__genre\");\n  const featuredOverview = document.querySelector(\".featured__overview\");\n\n  const random = Math.floor(Math.random() * 20);\n  const imgPath = \"https://image.tmdb.org/t/p/original\";\n\n  try {\n    const response = await fetch(`/.netlify/functions/fetch-movie`);\n    const movies = await response.json();\n    const data = movies.results[random];\n\n    const genre = data.genre_ids\n      .map((id) => {\n        for (const [key, value] of Object.entries(genreID)) {\n          if (id === value) {\n            if (key.includes(\"_\")) {\n              const split = key.split(\"_\");\n              return split.map((word) => firstLetterCapitalize(word)).join(\" \");\n            } else {\n              return firstLetterCapitalize(key);\n            }\n          }\n        }\n      })\n      .join(\", \");\n\n    document.body.style.backgroundImage = `linear-gradient(to bottom right, rgba(13, 16, 24, 0.8), rgba(0, 0, 0, 0.9)), url(${imgPath}${data.backdrop_path})`;\n\n    featuredTitle.textContent = data.title;\n    featuredDate.textContent = data.release_date.slice(0, 4);\n    featuredGenre.textContent = genre;\n    featuredOverview.textContent = data.overview;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nloadInitial();\n"],"names":[],"version":3,"file":"index.aa69868b.js.map","sourceRoot":"/__parcel_source_root/"}